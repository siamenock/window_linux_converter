언어로 구현된 RSA, ECDH입니다.

간단한 구조라서 이해하기 쉽지만, 최적화가 덜 되어 있으므로 강력한 성능을 요구하는 경우에는 부적합 합니다.

높은 속도가 필요하다면  강력한 오픈소스들을 찾아볼 것 (대신 이해하기 좀 힘듦)

 

다음은 linux기준 사용법입니다.

 

ECDH 사용법

1. “make run_ecdh" 명령

2. NIST FIPS 186-2에 정의된 타원곡선을 선택하기 위해 192, 224, 256, 384, 512 중에 하나를 입력한다.

3. 선택된 타원곡선의 생성점(Gx, Gy)이 출력된다. (프로토콜에 의해 정해진 값임)

4. Alice의 공개키를 생성하기 위한 개인키 정수 k_a를 입력한다.

5. Bob의 공개키를 생성하기 위한 개인키 정수 k_b를 입력한다.

6. 스칼라 곱셈 연산이 완료된 Alice의 공개키(x, y)가 출력된다.

7. 스칼라 곱셈 연산이 완료된 Bob의 공개키(x, y)가 출력된다.

8. ECDH 키교환 프로토콜을 이용하여 공유된 비밀키(Qx, Qy)가 출력된다.

 

RSA 사용법

1.     “make run_rsa" 명령

2.     Prime1, prime2 를 입력한다. debug중에는 다음 링크에 적혀 있는 값으로 테스트했다. (https://www.mobilefish.com/services/rsa_key_generation/rsa_key_generation.php)

3.     Prime1, prime2를 기반으로 암호화에 필요한 값이 계산돼 출력된다

4.     암호화할 데이터 원문(정수)을 입력한다.

5.     암호문 계산 및 출력

6.     복호화 된 데이터 출력

